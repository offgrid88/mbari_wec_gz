#!/usr/bin/python3
# Copyright 2022 Open Source Robotics Foundation, Inc. and Monterey Bay Aquarium Research Institute
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Launch batch of buoy simulations."""

from em import invoke as empy
import numpy as np
import yaml

import os

from ament_index_python.packages import get_package_share_directory

from launch import LaunchDescription
from launch import LaunchService
from launch.actions import IncludeLaunchDescription
from launch.launch_description_sources import PythonLaunchDescriptionSource


def generate_simulations(yaml_config):
    with open(yaml_config) as fd:
        config = yaml.load(fd, Loader=yaml.CLoader)

    iterations = config['iterations']
    door_state = config['door_state']
    scale_factor = config['scale_factor']
    simulation_params = list(zip(*[param.ravel() for param in np.meshgrid(iterations,
                                                                     door_state,
                                                                     scale_factor)]))

    print(f'Generated {len(simulation_params)} simulation runs:')
    print(f'Iterations, Door State, Scale Factor\n{np.array(simulation_params)}')

    pkg_buoy_gazebo = get_package_share_directory('buoy_gazebo')
    pkg_buoy_description = get_package_share_directory('buoy_description')

    model_dir = 'mbari_wec_base'
    empy_base_sdf_file = os.path.join(pkg_buoy_description, 'models', model_dir, 'model.sdf.em')
    base_sdf_file = os.path.join(pkg_buoy_description, 'models', model_dir, 'model.sdf')

    model_dir = 'mbari_wec'
    empy_sdf_file = os.path.join(pkg_buoy_description, 'models', model_dir, 'model.sdf.em')
    sdf_file = os.path.join(pkg_buoy_description, 'models', model_dir, 'model.sdf')

    for idx, (itx, ds, sf) in enumerate(simulation_params):
        print(f'\n\nSim run [{idx}] for {itx} iterations: door state={ds}, scale factor={sf}\n\n')
        empy(['-D', f"door_state = '{ds}'",
              '-o', base_sdf_file,
              empy_base_sdf_file])

        empy(['-D', f"scale_factor = '{sf}'",
              '-o', sdf_file,
              empy_sdf_file])

        def generate_launch_description():
            mbari_wec = IncludeLaunchDescription(
                PythonLaunchDescriptionSource(
                    os.path.join(pkg_buoy_gazebo, 'launch', 'mbari_wec.launch.py'),
                ),
                launch_arguments={'gz_args': f'-rs --iterations {itx}',
                    'on_exit_shutdown': 'True'}.items(),
            )
            return LaunchDescription([
                mbari_wec
            ])

        ls = LaunchService()
        ls.include_launch_description(generate_launch_description())
        result = ls.run()
        if result:
            print(f'Simulation run [{idx}] was not successful: return code [{result}]')

if __name__=='__main__':
    import sys
    generate_simulations(sys.argv[1])
